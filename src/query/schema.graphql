type Query {
  getUsers: [User!]!
  getUserById(id: ID!): User!
  getCourses: [Course!]!
}

type Mutation {
  createUser(data: userInput!): User
  singUp(data: userInput!): UserPayload
}

type UserPayload {
  user: User!
  token: String!
}

type User {
  id: ID!
  name: String!
  age: Int!
}

type Course {
  id: ID!
  name: String!
  created_at: User!
}

input userInput {
  name: String!
  age: Int!
}

type Subscription {
  message: String!
  user: UserSubcription!
}

type UserSubcription {
  mutation: String!
  data: User!
}
